:- use_module(library(clpfd)).

:- initialization(main).

main :-
	write_ln("Please input you list of classes as generated by the scheduler app and click enter. "),
	read([First | Rest]),
	addClasses([First | Rest]).

addClasses([]).

addClasses([First | Rest]):-
	write_ln("Inside addClasses"),
	addClass(First),
	addClasses(Rest).

addClass([Title, Section, Units, StartDate, EndDate, [Prof1 | RProfs], [Time1 | RTimes]]):-
	write_ln("Inside addClass"),
	assert(courseTitle(Title, 0)),
	assert(section(Title, Section, 0)),
	%if a professor is already in the database this will make 2 copies, 
	%but they will have the same rating and the extra copies will be deleted if they are given a new rating.
	addProfs([Prof1 | RProfs]), 
	assert(class([Title, Section, Units, StartDate, EndDate, [Prof1 | RProfs], [Time1 | RTimes]], 0)).

addProfs([]).

addProfs([X | Rest]):-
	write_ln("Inside professors"),
	assert(prof(X, 0)),
	addProfs(Rest).





generateSchedule:-
	findall([X, Va], class(X, Va), AllCourses),
	writeHelper(AllCourses).


writeHelper([]).

writeHelper([X | Rest]):-
	write_ln(X),
	writeHelper(Rest).